// create tasks for subprojects
subprojects { subproject ->

  // get right configuration for the subproject
  def config = rootProject.ext.configMap["$subproject.name"]

  task createTongueHTML {

    description = "Create webpage summarizing the visualizations."

    def dataset = config.dataset

    def phonemesFile = file("$rootProject.rootDir/configuration/$dataset.name/database.json")
    def slurper = new groovy.json.JsonSlurper()
    def phonemes = slurper.parse(phonemesFile)

    phonemes.findAll{it.missing == false}.each{
      dependsOn ":projects:tongue:$dataset.name-$it.speaker-$it.id:visualizeTongueProjection"
    }

    dependsOn "createTongueModel"

    def outputPath =
      file("$rootProject.buildDir/$dataset.name/html")

      def outputFile = file("$outputPath/index.html")

        doLast {

          outputFile.parentFile.mkdirs()

          def files = fileTree(rootDir) {
            include "configuration/$dataset.name/*/speaker.groovy"
          }

          def fileSet = files.files as SortedSet

          outputFile.withWriter{ w ->

            w << "<html>\n"
            w << "<head>\n"
            w << "<h1>Projections</h1>\n"
            w << "<style> table, th, td {border: 1px solid black; border-collapse: collapse;} th, td {padding: 15px; text-align:center;} </style>"
            w << "</head><body>"

            fileSet.each{ speaker ->
              // read meta information of speaker
              def slurper2 = new ConfigSlurper()
              def configuration =  slurper2.parse(speaker.text)

              def name = configuration.speaker.name

              w << "<h3>${configuration.speaker.name}</h3>\n"
              w << "<table>\n"

              def baseDir = file("$rootProject.buildDir/$dataset.name/$name/")
              w << "<tr style=\"text-align:center\" >\n"
              w << "<td>scan_id</td>\n"
              w << "<td>xy view</td>\n"
              w << "<td>zx view</td>\n"
              w << "<td>yz view</td>\n"
              w << "</tr>\n"

              configuration.speaker.scans.each{ scan ->
                w << "<tr>\n"

                def projections = file("$baseDir/${scan}/visualizeTongueProjection/")
                def imageDir = file("${outputPath}/images/${name}/${scan}")

                // copy slice projections
                copy{
                  from projections
                  into imageDir
                  include "*.png"
                }

                w << "<td>${scan}</td>\n"
                w << "<td>\
                  <img style=\"height:10em\" src=\"./images/${name}/${scan}/slice_xy_0.png\"/>\n\
                  <img style=\"height:10em\" src=\"./images/${name}/${scan}/slice_xy_1.png\"/>\n\
                  <img style=\"height:10em\" src=\"./images/${name}/${scan}/slice_xy_2.png\"/>\n\
                </td>\n"
                w << "<td>\
                  <img style=\"height:10em\" src=\"./images/${name}/${scan}/slice_xz_0.png\"/>\n\
                  <img style=\"height:10em\" src=\"./images/${name}/${scan}/slice_xz_1.png\"/>\n\
                  <img style=\"height:10em\" src=\"./images/${name}/${scan}/slice_xz_2.png\"/>\n\
                  <img style=\"height:10em\" src=\"./images/${name}/${scan}/slice_xz_3.png\"/>\n\
                </td>\n"
                w << "<td>\
                  <img style=\"height:10em\" src=\"./images/${name}/${scan}/slice_yz_0.png\"/>\n\
                  <img style=\"height:10em\" src=\"./images/${name}/${scan}/slice_yz_1.png\"/>\n\
                  <img style=\"height:10em\" src=\"./images/${name}/${scan}/slice_yz_2.png\"/>\n\
                  <img style=\"height:10em\" src=\"./images/${name}/${scan}/slice_yz_3.png\"/>\n\
                </td>\n"
                w << "</tr>\n"
              }

              w << "</table>\n"
            }

            w << "</body></html>"
          }

        } // end doLast

  }

  ///////////////////////////////////////////////////////////////////////////

} // end subprojects
